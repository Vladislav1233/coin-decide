{"version":3,"sources":["components/Coin/index.js","helpers/launchFlipCoin.js","components/Button/index.js","components/ScreenCoin/index.js","components/Card/index.js","App.js","serviceWorker.js","index.js"],"names":["Sprite","options","Object","classCallCheck","this","ctx","image","countLoop","frameIndex","tickCount","ticksPerFrame","numberOfFrames","width","height","stopAfterFlipping","start","clearRect","drawImage","_this","window","requestAnimationFrame","loop","update","render","launchFlipCoin","numFrame","ticksFrame","stopFlipping","canvas","document","getElementById","coinImage","Image","src","getContext","Button","_this$props","props","children","tagName","onClick","TagName","react_default","a","createElement","className","Component","defaultProps","ScreenCoin","onClickFlip","text","isMobileOnly","components_Button","Card","alt","version","id","xmlns","x","y","viewBox","d","App","state","isStopFlipping","setState","style","display","_this2","Shake","threshold","addEventListener","components_Card","components_ScreenCoin","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de204a5d.chunk.js","sourcesContent":["class Sprite {\r\n  constructor(options) {\r\n    this.ctx = options.ctx;\r\n\r\n    this.image = options.image;\r\n    this.countLoop = 0;\r\n\r\n    this.frameIndex = 0;\r\n    this.tickCount = 0;\r\n    this.ticksPerFrame = options.ticksPerFrame || 0;\r\n    this.numberOfFrames = options.numberOfFrames || 1;\r\n\r\n    this.width = options.width;\r\n    this.height = options.height;\r\n\r\n    this.stopAfterFlipping = options.stopAfterFlipping; \r\n\r\n    this.start();\r\n  }\r\n\r\n  update() {\r\n    this.tickCount++;\r\n\r\n    if (this.tickCount > this.ticksPerFrame) {\r\n      this.tickCount = 0;\r\n      if (this.frameIndex < this.numberOfFrames - 1) {\r\n        this.frameIndex++;\r\n      } else {\r\n        this.frameIndex = 0;\r\n        this.countLoop++;\r\n        this.ticksPerFrame++;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.ctx.clearRect(0, 0, this.width / this.numberOfFrames, this.height);\r\n    this.ctx.drawImage(\r\n      this.image,\r\n      this.frameIndex * this.width / this.numberOfFrames,\r\n      0,\r\n      this.width / this.numberOfFrames,\r\n      this.height,\r\n      0,\r\n      0,\r\n      this.width / this.numberOfFrames,\r\n      this.height\r\n    )\r\n  }\r\n\r\n  start() {\r\n    let loop = () => {\r\n      this.update();\r\n      this.render();\r\n\r\n      if (this.countLoop <= 20) {\r\n        window.requestAnimationFrame(loop);\r\n      } else {\r\n        if(this.stopAfterFlipping) {\r\n          this.stopAfterFlipping() // Функция колбэк после того как остановился flip\r\n        }\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(loop);\r\n  }\r\n}\r\n\r\nexport default Sprite;","import Sprite from 'components/Coin/';\r\n\r\nconst launchFlipCoin = (numFrame, ticksFrame, stopFlipping) => {\r\n  let canvas = document.getElementById('canvas');\r\n  canvas.width = 100;\r\n  canvas.height = 100;\r\n  let coinImage = new Image();\r\n  coinImage.src = 'http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation/downloads/sprite-animation-demo/images/coin-sprite-animation.png';\r\n  // eslint-disable-next-line\r\n  let sprite = new Sprite({\r\n      ctx: canvas.getContext('2d'),\r\n      image: coinImage,\r\n      width: 1000,\r\n      height: 100,\r\n      numberOfFrames: numFrame || 0, // Кол-во экранов\r\n      ticksPerFrame: ticksFrame || 0,\r\n      stopAfterFlipping: stopFlipping\r\n  });\r\n};\r\n\r\nexport default launchFlipCoin;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { children, tagName, onClick } = this.props;\r\n    const TagName = tagName;\r\n\r\n    return(\r\n      <TagName\r\n        className='b-button'\r\n        onClick={onClick}\r\n      >\r\n        {children}\r\n      </TagName>\r\n    )\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  tagName: 'button'\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react';\r\nimport { isMobileOnly } from 'react-device-detect';\r\nimport launchFlipCoin from 'helpers/launchFlipCoin';\r\n\r\n// Note: components\r\nimport Button from 'components/Button';\r\n\r\nimport './style.scss';\r\n\r\nclass ScreenCoin extends Component {\r\n\r\n  onClickFlip = () => {\r\n    launchFlipCoin(10, -15, this.props.stopFlipping);\r\n  }\r\n  \r\n  render() {\r\n    const text = isMobileOnly \r\n      ? 'Потряси телефон и монетка решит в каком баре ты сегодня получаешь скидку и тусишь.'\r\n      : '...и она решит в каком баре ты сегодня получаешь скидку и тусишь.';\r\n\r\n    return(\r\n      <div className=\"b-screen-coin\">\r\n        {!isMobileOnly && \r\n          <div className=\"b-screen-coin__button\">\r\n            <Button onClick={this.onClickFlip}>Брось монетку</Button>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"b-screen-coin__text\">\r\n          {text}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScreenCoin;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"b-card\">\r\n        <div className=\"b-card__image-wrapper\">\r\n          <img className=\"b-card__image\" src=\"https://media-cdn.tripadvisor.com/media/photo-w/12/a0/59/c9/69-pints-craft-pub-tverskaya.jpg\" alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"b-card__content\">\r\n          <div className=\"b-card__name\">69 Pints</div>\r\n\r\n          <div className=\"b-card__feedback\">\r\n            <div className=\"b-card__feedback-star\">+++++</div>\r\n            <div className=\"b-card__feedback-count\">45 отзывов</div>\r\n          </div>\r\n\r\n          <div className=\"b-card__info\">\r\n            <p>\r\n              <span className=\"b-card__icon\">\r\n                <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 97.713 97.713\"><g><path d=\"M48.855,0C29.021,0,12.883,16.138,12.883,35.974c0,5.174,1.059,10.114,3.146,14.684 c8.994,19.681,26.238,40.46,31.31,46.359c0.38,0.441,0.934,0.695,1.517,0.695s1.137-0.254,1.517-0.695 c5.07-5.898,22.314-26.676,31.311-46.359c2.088-4.57,3.146-9.51,3.146-14.684C84.828,16.138,68.69,0,48.855,0z M48.855,54.659 c-10.303,0-18.686-8.383-18.686-18.686c0-10.304,8.383-18.687,18.686-18.687s18.686,8.383,18.686,18.687 C67.542,46.276,59.159,54.659,48.855,54.659z\"/></g></svg>\r\n              </span>\r\n              Тверская улица 5/6, Москва, Россия\r\n            </p>\r\n\r\n            <p>\r\n              <span className=\"b-card__icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\"><g id=\"surface1\"><path d=\"M 16 4 C 9.382813 4 4 9.382813 4 16 C 4 22.617188 9.382813 28 16 28 C 22.617188 28 28 22.617188 28 16 C 28 9.382813 22.617188 4 16 4 Z M 16 6 C 21.535156 6 26 10.464844 26 16 C 26 21.535156 21.535156 26 16 26 C 10.464844 26 6 21.535156 6 16 C 6 10.464844 10.464844 6 16 6 Z M 15 8 L 15 17 L 22 17 L 22 15 L 17 15 L 17 8 Z \"></path></g></svg>\r\n              </span>\r\n              Открыто сегодня: 12:00 - 23:45\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Shake from 'shake2.js';\r\nimport launchFlipCoin from 'helpers/launchFlipCoin';\r\nimport ScreenCoin from 'components/ScreenCoin';\r\nimport Card from 'components/Card';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isStopFlipping: false\r\n  };\r\n\r\n  stopFlipping = () => {\r\n    this.setState({\r\n      isStopFlipping: true\r\n    });\r\n\r\n    document.getElementById('canvas').style.display='none';\r\n  };\r\n\r\n  componentDidMount() {\r\n    //create a new instance of shake.js.\r\n    const myShakeEvent = new Shake({\r\n      threshold: 30\r\n    });\r\n    // start listening to device motion\r\n    myShakeEvent.start();\r\n\r\n    //shake event callback\r\n    const shakeEventDidOccur = () => launchFlipCoin(10, -15, this.stopFlipping);\r\n\r\n    // register a shake event\r\n    window.addEventListener('shake', shakeEventDidOccur, false);\r\n  }\r\n\r\n  render() {\r\n    const { isStopFlipping } = this.state;\r\n\r\n    launchFlipCoin(0, 0);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {isStopFlipping \r\n          ? <Card />\r\n          : <ScreenCoin stopFlipping={this.stopFlipping}/>\r\n        }\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}